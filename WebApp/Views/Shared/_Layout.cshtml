<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - WebApp</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/WebApp.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />
    @RenderSection("Style", required: false)
</head>
<body>
    @* Варианты рендеринга
     Способ	                                Когда использовать
    <partial name="_Header" />	            Для простых случаев (синхронная загрузка).
    @await Html.PartialAsync("_Header")	    Если нужны асинхронные операции внутри хедера.
    @await Component.InvokeAsync("_Header")	Если view требует сложной логики (например, динамическое меню из БД).
    *@
    <partial name="_Header"/>
        <div class="layout-content">
        <aside class="aside-left" id="asideLeft">
            @if (IsSectionDefined("_AsideLeft"))
            {
                @RenderSection("_AsideLeft", required: false)
            }
            else
            {
                @if (User?.Identity?.IsAuthenticated == true)
                { 
                    <partial name="_DefaultLeftMenu" />
                }
            }
        </aside>

        <main>
            @RenderBody()
        </main>

        <aside class="aside-right" id="asideRight">
            @RenderSection("_AsideRight", required: false)
        </aside>
    </div>

    <footer>
        &copy; @DateTime.Now.Year - WebApp
    </footer>

    <partial name="_Notification3" />
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const leftMenuToggle = document.getElementById('leftMenuToggle');
            const rightMenuToggle = document.getElementById('rightMenuToggle');
            const asideLeft = document.getElementById('asideLeft');
            const asideRight = document.getElementById('asideRight');

            if (leftMenuToggle) {
                leftMenuToggle.addEventListener('click', function() {
                    asideLeft.classList.toggle('active');
                    asideRight.classList.remove('active');
                });
            }

            if (rightMenuToggle) {
                rightMenuToggle.addEventListener('click', function() {
                    asideRight.classList.toggle('active');
                    asideLeft.classList.remove('active');
                });
            }
        });
    </script>
    @await RenderSectionAsync("Scripts", required: false)

</body>
</html>